{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\source\\\\repos\\\\Quiz_App\\\\quiz-client\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { Card, CardContent, Typography, List, ListItem, ListItemButton, CardHeader, Box, LinearProgress, CardMedia } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { createAPIEndpoint, ENDPOINTS, BASE_URL } from \"../api\";\nimport { getFormatedTime } from \"../helper\";\nimport useStateContext from \"../hooks/useStateContext\";\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [qns, setQns] = React.useState([]);\n  const [qnIndex, setQnIndex] = useState(0);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  const navigate = useNavigate();\n  let timer;\n\n  const startTimer = () => {\n    timer = setInterval(() => {\n      setTimeTaken(prev => prev + 1);\n    }, [1000]);\n  };\n\n  useEffect(() => {\n    setContext({\n      timeTaken: 0,\n      selectedOptions: []\n    });\n  });\n\n  const updateAnswer = (qnId, optionIdx) => {\n    const temp = [...context.selectedOptions];\n    temp.push({\n      qnId,\n      selected: optionIdx\n    });\n\n    if (qnIndex < 4) {\n      setContext({\n        selectedOptions: [...temp]\n      });\n      setQnIndex(qnIndex + 1);\n    } else {\n      setContext({\n        selectedOptions: [...temp],\n        timeTaken\n      });\n      navigate('/result');\n    }\n  };\n\n  useEffect(() => {\n    createAPIEndpoint(ENDPOINTS.question).fetch().then(res => {\n      setQns(res.data);\n      startTimer();\n    }).catch(err => console.log(err));\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return qns.length !== 0 ? /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 640,\n      mx: \"auto\",\n      mt: 5,\n      \"& . MultiCardHeader-action\": {\n        m: 0,\n        alignSelf: \"center\"\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Question\" + (qnIndex + 1) + \"of 5\",\n      action: /*#__PURE__*/_jsxDEV(Typography, {\n        children: getFormatedTime(timeTaken)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [qns[qnIndex].imageName != null ? /*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        image: BASE_URL + \"images/\" + qns[qnIndex].imageName,\n        sx: {\n          width: \"100%\",\n          m: \"2px auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: (qnIndex + 1) * 100 / 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: qns[qnIndex].qinWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: qns[qnIndex].options.map((item, idx) => /*#__PURE__*/_jsxDEV(ListItemButton, {\n          onClick: () => updateAnswer(qns[qnIndex].qnId, idx),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: String.fromCharCode(65 + idx) + \" . \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), item]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(Quiz, \"rtu1U/LlUlzt7D44IhvmPa4Zp4A=\", false, function () {\n  return [useStateContext, useNavigate];\n});\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["Card","CardContent","Typography","List","ListItem","ListItemButton","CardHeader","Box","LinearProgress","CardMedia","React","useEffect","useState","createAPIEndpoint","ENDPOINTS","BASE_URL","getFormatedTime","useStateContext","useNavigate","Quiz","qns","setQns","qnIndex","setQnIndex","timeTaken","setTimeTaken","context","setContext","navigate","timer","startTimer","setInterval","prev","selectedOptions","updateAnswer","qnId","optionIdx","temp","push","selected","question","fetch","then","res","data","catch","err","console","log","clearInterval","length","maxWidth","mx","mt","m","alignSelf","imageName","width","qinWords","options","map","item","idx","String","fromCharCode"],"sources":["C:/Users/hp/source/repos/Quiz_App/quiz-client/src/components/Quiz.js"],"sourcesContent":["import {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  CardHeader,\r\n  Box,\r\n  LinearProgress,\r\n  CardMedia,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { createAPIEndpoint, ENDPOINTS, BASE_URL } from \"../api\";\r\nimport { getFormatedTime } from \"../helper\";\r\nimport useStateContext from \"../hooks/useStateContext\";\r\nimport {useNavigate} from 'react-router'\r\n\r\nexport default function Quiz() {\r\n  const [qns, setQns] = React.useState([]);\r\n  const [qnIndex, setQnIndex] = useState(0);\r\n  const [timeTaken, setTimeTaken] = useState(0);\r\n  const { context, setContext } = useStateContext();\r\n  const navigate = useNavigate();\r\n\r\n  let timer;\r\n\r\n  const startTimer = () => {\r\n    timer = setInterval(() => {\r\n      setTimeTaken((prev) => prev + 1);\r\n    }, [1000]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContext({\r\n      timeTaken: 0,\r\n      selectedOptions: [],\r\n    });\r\n  });\r\n\r\n  const updateAnswer = (qnId, optionIdx) => {\r\n    const temp = [...context.selectedOptions];\r\n    temp.push({\r\n      qnId,\r\n      selected: optionIdx,\r\n    });\r\n\r\n    if (qnIndex < 4) {\r\n      setContext({ selectedOptions: [...temp] });\r\n      setQnIndex(qnIndex + 1);\r\n    } else {\r\n      setContext({ selectedOptions: [...temp], timeTaken });\r\n      navigate('/result')\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    createAPIEndpoint(ENDPOINTS.question)\r\n      .fetch()\r\n      .then((res) => {\r\n        setQns(res.data);\r\n        startTimer();\r\n      })\r\n      .catch((err) => console.log(err));\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return qns.length !== 0 ? (\r\n    <Card\r\n      sx={{\r\n        maxWidth: 640,\r\n        mx: \"auto\",\r\n        mt: 5,\r\n        \"& . MultiCardHeader-action\": { m: 0, alignSelf: \"center\" },\r\n      }}\r\n    >\r\n      <CardHeader\r\n        title={\"Question\" + (qnIndex + 1) + \"of 5\"}\r\n        action={<Typography>{getFormatedTime(timeTaken)}</Typography>}\r\n      />\r\n      <Box>\r\n        {qns[qnIndex].imageName != null ? (\r\n          <CardMedia\r\n            component=\"img\"\r\n            image={BASE_URL + \"images/\" + qns[qnIndex].imageName}\r\n            sx={{ width: \"100%\", m: \"2px auto\" }}\r\n          />\r\n        ) : null}\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          value={((qnIndex + 1) * 100) / 5}\r\n        />\r\n      </Box>\r\n      <CardContent>\r\n        <Typography variant=\"h6\">{qns[qnIndex].qinWords}</Typography>\r\n        <List>\r\n          {qns[qnIndex].options.map((item, idx) => (\r\n            <ListItemButton\r\n              key={idx}\r\n              onClick={() => updateAnswer(qns[qnIndex].qnId, idx)}\r\n            >\r\n              <div>\r\n                <b>{String.fromCharCode(65 + idx) + \" . \"}</b>\r\n                {item}\r\n              </div>\r\n            </ListItemButton>\r\n          ))}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  ) : null;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}