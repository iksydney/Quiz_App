{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\source\\\\repos\\\\Quiz_App\\\\quiz-client\\\\src\\\\components\\\\Result.js\",\n    _s = $RefreshSig$();\n\nimport useStateContext from \"../hooks/useStateContext\";\nimport { createAPIEndpoint, ENDPOINTS, BASE_URL } from \"../api\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Card, CardContent, CardMedia, Typography } from \"@mui/material\";\nimport { getFormatedTime } from \"../helper\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Result() {\n  _s();\n\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  const [score, setScore] = useState(0);\n  const [qnAnswers, setQnAnswers] = useState([]);\n  const navigate = useNavigate();\n\n  const restart = () => {\n    setContext({\n      timeTaken: 0,\n      selectedOptions: []\n    });\n  };\n\n  const calculateScore = qna => {\n    let tempScore = qna.reduce((acc, curr) => {\n      return curr.answer === curr.selected ? acc + 1 : acc;\n    }, 0);\n    setScore(tempScore);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mt: 5,\n      display: \"flex\",\n      width: \"100%\",\n      maxwidth: 640,\n      mx: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flex: \"1 auto\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Congratulations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"YOUR SCORE\", /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              fontWeight: 600\n            },\n            children: [score, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Took \", getFormatedTime(context.timeTaken) + \" mins \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      sx: {\n        width: 220\n      },\n      image: \"./result.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Result, \"W9bIlg1sKrU8xtUdiVs5Uhzayb8=\", false, function () {\n  return [useStateContext, useNavigate];\n});\n\n_c = Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["useStateContext","createAPIEndpoint","ENDPOINTS","BASE_URL","React","useEffect","useState","Box","Card","CardContent","CardMedia","Typography","getFormatedTime","useNavigate","Result","context","setContext","score","setScore","qnAnswers","setQnAnswers","navigate","restart","timeTaken","selectedOptions","calculateScore","qna","tempScore","reduce","acc","curr","answer","selected","mt","display","width","maxwidth","mx","flexDirection","flexGrow","flex","textAlign","fontWeight"],"sources":["C:/Users/hp/source/repos/Quiz_App/quiz-client/src/components/Result.js"],"sourcesContent":["import useStateContext from \"../hooks/useStateContext\";\r\nimport { createAPIEndpoint, ENDPOINTS, BASE_URL } from \"../api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Box, Card, CardContent, CardMedia, Typography } from \"@mui/material\";\r\nimport { getFormatedTime } from \"../helper\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function Result() {\r\n  const { context, setContext } = useStateContext();\r\n  const [score, setScore] = useState(0);\r\n  const [qnAnswers, setQnAnswers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const restart = () => {\r\n    setContext({\r\n      timeTaken: 0,\r\n      selectedOptions: [],\r\n    });\r\n  };\r\n\r\n  \r\n\r\n  const calculateScore = (qna) => {\r\n    let tempScore = qna.reduce((acc, curr) => {\r\n      return curr.answer === curr.selected ? acc + 1 : acc;\r\n    }, 0);\r\n    setScore(tempScore);\r\n  };\r\n  return (\r\n    <Card\r\n      sx={{ mt: 5, display: \"flex\", width: \"100%\", maxwidth: 640, mx: \"auto\" }}\r\n    >\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", flexGrow: 1 }}>\r\n        <CardContent sx={{ flex: \"1 auto\", textAlign: \"center\" }}>\r\n          <Typography variant=\"h4\">Congratulations</Typography>\r\n          <Typography variant=\"h6\">\r\n            YOUR SCORE\r\n            <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n              {score}/5\r\n            </Typography>\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            Took {getFormatedTime(context.timeTaken) + \" mins \"}\r\n          </Typography>\r\n        </CardContent>\r\n      </Box>\r\n      <CardMedia component=\"img\" sx={{ width: 220 }} image=\"./result.png\" />\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,0BAA5B;AACA,SAASC,iBAAT,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,QAAvD;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,WAApB,EAAiCC,SAAjC,EAA4CC,UAA5C,QAA8D,eAA9D;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,eAAe,SAASC,MAAT,GAAkB;EAAA;;EAC/B,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAA0BhB,eAAe,EAA/C;EACA,MAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAMe,QAAQ,GAAGR,WAAW,EAA5B;;EAEA,MAAMS,OAAO,GAAG,MAAM;IACpBN,UAAU,CAAC;MACTO,SAAS,EAAE,CADF;MAETC,eAAe,EAAE;IAFR,CAAD,CAAV;EAID,CALD;;EASA,MAAMC,cAAc,GAAIC,GAAD,IAAS;IAC9B,IAAIC,SAAS,GAAGD,GAAG,CAACE,MAAJ,CAAW,CAACC,GAAD,EAAMC,IAAN,KAAe;MACxC,OAAOA,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACE,QAArB,GAAgCH,GAAG,GAAG,CAAtC,GAA0CA,GAAjD;IACD,CAFe,EAEb,CAFa,CAAhB;IAGAX,QAAQ,CAACS,SAAD,CAAR;EACD,CALD;;EAMA,oBACE,QAAC,IAAD;IACE,EAAE,EAAE;MAAEM,EAAE,EAAE,CAAN;MAASC,OAAO,EAAE,MAAlB;MAA0BC,KAAK,EAAE,MAAjC;MAAyCC,QAAQ,EAAE,GAAnD;MAAwDC,EAAE,EAAE;IAA5D,CADN;IAAA,wBAGE,QAAC,GAAD;MAAK,EAAE,EAAE;QAAEH,OAAO,EAAE,MAAX;QAAmBI,aAAa,EAAE,QAAlC;QAA4CC,QAAQ,EAAE;MAAtD,CAAT;MAAA,uBACE,QAAC,WAAD;QAAa,EAAE,EAAE;UAAEC,IAAI,EAAE,QAAR;UAAkBC,SAAS,EAAE;QAA7B,CAAjB;QAAA,wBACE,QAAC,UAAD;UAAY,OAAO,EAAC,IAApB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,UAAD;UAAY,OAAO,EAAC,IAApB;UAAA,sCAEE,QAAC,UAAD;YAAY,OAAO,EAAC,IAApB;YAAyB,EAAE,EAAE;cAAEC,UAAU,EAAE;YAAd,CAA7B;YAAA,WACGzB,KADH;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAQE,QAAC,UAAD;UAAY,OAAO,EAAC,IAApB;UAAA,oBACQL,eAAe,CAACG,OAAO,CAACQ,SAAT,CAAf,GAAqC,QAD7C;QAAA;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eAiBE,QAAC,SAAD;MAAW,SAAS,EAAC,KAArB;MAA2B,EAAE,EAAE;QAAEY,KAAK,EAAE;MAAT,CAA/B;MAA+C,KAAK,EAAC;IAArD;MAAA;MAAA;MAAA;IAAA,QAjBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD;;GA1CuBrB,M;UACUd,e,EAGfa,W;;;KAJKC,M"},"metadata":{},"sourceType":"module"}