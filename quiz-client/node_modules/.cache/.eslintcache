[{"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\index.js":"1","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\App.js":"2","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\reportWebVitals.js":"3","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Login.js":"4","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Center.js":"5","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\hooks\\useForm.js":"6","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\api\\index.js":"7","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\hooks\\useStateContext.js":"8","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Quiz.js":"9","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Result.js":"10","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\helper\\index.js":"11","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Layout.js":"12","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Answer.js":"13","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Authenticate.js":"14"},{"size":979,"mtime":1659625410744,"results":"15","hashOfConfig":"16"},{"size":716,"mtime":1659737291834,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1659196636805,"results":"18","hashOfConfig":"16"},{"size":2944,"mtime":1659543456388,"results":"19","hashOfConfig":"16"},{"size":365,"mtime":1659200340506,"results":"20","hashOfConfig":"16"},{"size":458,"mtime":1659361029592,"results":"21","hashOfConfig":"16"},{"size":579,"mtime":1659637325574,"results":"22","hashOfConfig":"16"},{"size":1181,"mtime":1659638624998,"results":"23","hashOfConfig":"16"},{"size":3334,"mtime":1659717714365,"results":"24","hashOfConfig":"16"},{"size":3757,"mtime":1659712805647,"results":"25","hashOfConfig":"16"},{"size":251,"mtime":1659597238233,"results":"26","hashOfConfig":"16"},{"size":831,"mtime":1659624978490,"results":"27","hashOfConfig":"16"},{"size":2251,"mtime":1659736349348,"results":"28","hashOfConfig":"16"},{"size":297,"mtime":1659737284867,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1jb5wpd",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"33"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\index.js",[],[],[],"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\App.js",[],[],"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\reportWebVitals.js",[],[],"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Login.js",["77","78","79"],[],"import axios from \"axios\";\r\nimport useStateContext from \"../hooks/useStateContext\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Center from \"./Center\";\r\nimport useForm from \"../hooks/useForm\";\r\nimport { createAPIEndpoint, ENDPOINTS } from \"../api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst getFreshModel = () => ({\r\n  name: \"\",\r\n  email: \"\",\r\n});\r\n\r\nexport default function Login() {\r\n  const { context, setContext } = useStateContext();\r\n\r\n  const navigate = useNavigate();\r\n  const { values, setValues, errors, setErrors, handleInputChange } =\r\n    useForm(getFreshModel);\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    if (validate())\r\n      createAPIEndpoint(ENDPOINTS.participant)\r\n        .post(values)\r\n        .then((res) => {\r\n          setContext({ participantId: res.data.participantId });\r\n          navigate(\"/quiz\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = {};\r\n    temp.email = /\\S+@\\S+\\.\\S+/.test(values.email) ? \"\" : \"Email is not valid\";\r\n    temp.name = values.name !== \"\" ? \"\" : \"This field is required\";\r\n    setErrors(temp);\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  return (\r\n    <Center>\r\n      {context.participantId}\r\n      <Card sx={{ width: 450 }}>\r\n        <CardContent sx={{ textAlign: \"center\" }}>\r\n          <Typography variant=\"h3\" sx={{ my: 3 }}>\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              \"& .MuiTextField-root\": {\r\n                m: 1,\r\n                width: \"90%\",\r\n              },\r\n            }}\r\n          >\r\n            <form\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              onSubmit={login}\r\n              encType=\"application/x-www-form-urlencoded\"\r\n            >\r\n              <TextField\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleInputChange}\r\n                variant=\"outlined\"\r\n                id=\"email-address\"\r\n                autoComplete=\"\"\r\n                {...(errors.email && { error: true, helperText: errors.email })}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={values.name}\r\n                onChange={handleInputChange}\r\n                variant=\"outlined\"\r\n                id=\"name-value\"\r\n                {...(errors.name && { error: true, helperText: errors.name })}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                sx={{ width: \"90%\" }}\r\n              >\r\n                Start\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Center>\r\n  );\r\n}\r\n","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Center.js",[],[],"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\hooks\\useForm.js",[],[],"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\api\\index.js",[],[],"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\hooks\\useStateContext.js",["80"],[],"import { linearProgressClasses } from \"@mui/material\";\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nexport const stateContext = createContext();\r\n\r\nconst getFreshContext = () => {\r\n  if (localStorage.getItem(\"context\") === null)\r\n    localStorage.setItem(\r\n      \"context\",\r\n      JSON.stringify({\r\n        participantId: 0,\r\n        timeTaken: 0,\r\n        selectedOptions: [],\r\n      })\r\n    );\r\n  return JSON.parse(localStorage.getItem(\"context\"));\r\n};\r\n\r\nexport default function useStateContext() {\r\n  const { context, setContext } = useContext(stateContext);\r\n  return {\r\n    context,\r\n    setContext: (obj) => {\r\n      setContext({ ...context, ...obj });\r\n    },\r\n    resetContext: () => {\r\n      localStorage.removeItem(\"context\");\r\n      setContext(getFreshContext());\r\n    },\r\n  };\r\n}\r\n\r\nexport function ContextProvider({ children }) {\r\n  const [context, setContext] = useState(getFreshContext());\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"context\", JSON.stringify(context));\r\n  }, [context]);\r\n\r\n  return (\r\n    <stateContext.Provider value={{ context, setContext }}>\r\n      {children}\r\n    </stateContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Quiz.js",["81"],[],"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Result.js",["82","83"],[],"import useStateContext from \"../hooks/useStateContext\";\r\nimport { createAPIEndpoint, ENDPOINTS, BASE_URL } from \"../api\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { getFormatedTime } from \"../helper\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { green } from \"@mui/material/colors\";\r\nimport Answer from \"./Answer\";\r\n\r\nexport default function Result() {\r\n  const { context, setContext } = useStateContext();\r\n  const [score, setScore] = useState(0);\r\n  const [qnAnswers, setQnAnswers] = useState([]);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const ids = context.selectedOptions.map((x) => x.qnId);\r\n    console.log(ids);\r\n    createAPIEndpoint(ENDPOINTS.getAnswers)\r\n      .post(ids)\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        const qna = context.selectedOptions.map((x) => ({\r\n          ...x,\r\n          ...res.data.find((y) => y.qnId === x.qnId),\r\n        }));\r\n        setQnAnswers(qna);\r\n        calculateScore(qna);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  const restart = () => {\r\n    setContext({\r\n      timeTaken: 0,\r\n      selectedOptions: [],\r\n    });\r\n    navigate(\"/quiz\");\r\n  };\r\n\r\n  const submitScore = () => {\r\n    createAPIEndpoint(ENDPOINTS.participant)\r\n      .put(context.participantId, {\r\n        participantId: context.participantId,\r\n        score: score,\r\n        timeTaken: context.timeTaken,\r\n      })\r\n      .then((res) => {\r\n        setShowAlert(true);\r\n        setTimeout(() => {\r\n          setShowAlert(false);\r\n        }, 4000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const calculateScore = (qna) => {\r\n    let tempScore = qna.reduce((acc, curr) => {\r\n      return curr.answer === curr.selected ? acc + 1 : acc;\r\n    }, 0);\r\n    setScore(tempScore);\r\n  };\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{\r\n          mt: 5,\r\n          display: \"flex\",\r\n          width: \"100%\",\r\n          maxwidth: 640,\r\n          mx: \"auto\",\r\n        }}\r\n      >\r\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", flexGrow: 1 }}>\r\n          <CardContent sx={{ flex: \"1 auto\", textAlign: \"center\" }}>\r\n            <Typography variant=\"h4\">Congratulations</Typography>\r\n            <Typography variant=\"h6\">YOUR SCORE</Typography>\r\n            <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n              <Typography variant=\"span\" color={green[500]}>\r\n                {score}\r\n              </Typography>\r\n              /5\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              Took {getFormatedTime(context.timeTaken) + \" mins \"}\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ mx: 1 }}\r\n              size=\"small\"\r\n              onClick={submitScore}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Alert\r\n              severity=\"success\"\r\n              variant=\"string\"\r\n              sx={{\r\n                width: \"60%\",\r\n                m: \"auto\",\r\n                visibility: showAlert ? \"visible\" : \"hidden\",\r\n              }}\r\n            >\r\n              Score Updated.\r\n            </Alert>\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ mx: 1 }}\r\n              size=\"small\"\r\n              onClick={restart}\r\n            >\r\n              Re-try\r\n            </Button>\r\n          </CardContent>\r\n        </Box>\r\n        <CardMedia component=\"img\" sx={{ width: 220 }} image=\"./result.png\" />\r\n      </Card>\r\n      <Answer qnAnswers={qnAnswers} />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\helper\\index.js",[],[],"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Layout.js",[],[],"C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Answer.js",["84","85","86","87"],[],"import React, { useState } from \"react\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  CardMedia,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { BASE_URL } from \"../api\";\r\nimport ExpandCircleDownIcon from \"@mui/icons-material/ExpandCircleDown\";\r\nimport { red, green, grey } from \"@mui/material/colors\";\r\n\r\nexport default function Answer({ qnAnswers }) {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const markCorrectOrNot = (qna, idx) => {\r\n    if ([qna.answer, qna.selected].includes(idx)) {\r\n      return { sx: { color: qna.answer == idx ? green[500] : red[500] } };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 5, width: \"100%\", maxWidth: 640, mx: \"auto\" }}>\r\n      {qnAnswers.map((item, j) => (\r\n        <Accordion\r\n          disableGutters\r\n          key={j}\r\n          expanded={expanded === j}\r\n          onChange={handleChange(j)}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={\r\n              <ExpandCircleDownIcon\r\n                sx={{\r\n                  color: item.answer == item.selected ? green[500] : red[500],\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <Typography sx={{ width: \"90%\", flexShrink: 0 }}>\r\n              {item.qnInWords}\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails sx={{ backgroundColor: grey[900] }}>\r\n            {item.imageName ? (\r\n              <CardMedia\r\n                component=\"img\"\r\n                image={BASE_URL + \"images/\" + item.imageName}\r\n                sx={{ m: \"10px auto\", width: \"auto\" }}\r\n              />\r\n            ) : null}\r\n            <List>\r\n              {item.options.map((x, i) => (\r\n                <ListItem key={i}>\r\n                  <Typography {...markCorrectOrNot(item, i)}>\r\n                    <b>{String.fromCharCode(65 + i) + \". \"}</b>\r\n                    {x}\r\n                  </Typography>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\hp\\source\\repos\\Quiz_App\\quiz-client\\src\\components\\Authenticate.js",[],[],{"ruleId":"88","severity":1,"message":"89","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":13},{"ruleId":"88","severity":1,"message":"92","line":11,"column":17,"nodeType":"90","messageId":"91","endLine":11,"endColumn":25},{"ruleId":"88","severity":1,"message":"93","line":26,"column":19,"nodeType":"90","messageId":"91","endLine":26,"endColumn":28},{"ruleId":"88","severity":1,"message":"94","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":31},{"ruleId":"95","severity":1,"message":"96","line":38,"column":8,"nodeType":"97","endLine":38,"endColumn":10,"suggestions":"98"},{"ruleId":"88","severity":1,"message":"99","line":2,"column":40,"nodeType":"90","messageId":"91","endLine":2,"endColumn":48},{"ruleId":"95","severity":1,"message":"100","line":40,"column":6,"nodeType":"97","endLine":40,"endColumn":8,"suggestions":"101"},{"ruleId":"88","severity":1,"message":"92","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"102","line":7,"column":3,"nodeType":"90","messageId":"91","endLine":7,"endColumn":7},{"ruleId":"103","severity":1,"message":"104","line":26,"column":40,"nodeType":"105","messageId":"106","endLine":26,"endColumn":42},{"ruleId":"103","severity":1,"message":"104","line":43,"column":38,"nodeType":"105","messageId":"106","endLine":43,"endColumn":40},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setValues' is assigned a value but never used.","'linearProgressClasses' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setContext', 'startTimer', and 'timer'. Either include them or remove the dependency array.","ArrayExpression",["107"],"'BASE_URL' is defined but never used.","React Hook useEffect has a missing dependency: 'context.selectedOptions'. Either include it or remove the dependency array.",["108"],"'Chip' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [setContext, startTimer, timer]",{"range":"113","text":"114"},"Update the dependencies array to be: [context.selectedOptions]",{"range":"115","text":"116"},[1221,1223],"[setContext, startTimer, timer]",[1226,1228],"[context.selectedOptions]"]